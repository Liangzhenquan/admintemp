{"version":3,"sources":["api/handleError.js","api/config.js","api/index.js","views/Login.jsx","utils/message.js"],"names":["handleError","res","baseURL","status","url","replace","window","location","href","message","error","setTimeout","json","originFetch","fetch","Object","defineProperty","configurable","enumerable","get","options","headers","Accept","authorization","localStorage","getItem","then","a","ok","post","data","p","method","body","JSON","stringify","Promise","race","resolve","reject","Error","Section","styled","section","LoginBox","div","Title","h2","PwdInput","LoginButton","Login","props","useState","name","setname","pwd","setPwd","login","account","password","result","token","setLocalStorage","history","push","msg","onChange","e","target","value","placeholder","prefix","className","onClick","type","config","top","duration","maxCount"],"mappings":"yJAsBeA,EArBK,SAACC,EAAKC,GACxB,OAAQD,EAAIE,QACV,KAAK,IAEW,UADFF,EAAIG,IAAIC,QAAQH,EAAS,IAEnCI,OAAOC,SAASC,KAAO,UAEvBC,IAAQC,MAAM,iFAAiB,GAC/BC,YAAW,WACTL,OAAOC,SAASC,KAAO,WACtB,MAEL,MACF,KAAK,IACHC,IAAQC,MAAM,8CACd,MACF,QACED,IAAQC,MAAM,4BAElB,OAAOT,EAAIW,QCRPC,EAAcC,MACpBC,OAAOC,eAAeV,OAAQ,QAAS,CACrCW,cAAc,EACdC,YAAY,EACZC,IAHqC,WAInC,OAAO,SAACf,EAAKgB,GACX,OAAOP,EAAY,GAAD,OAdR,0BAcQ,OAAcT,GAAd,eACbgB,EADa,GAEb,CACDC,QAAQ,aACN,eAAgB,iCAChBC,OAAQ,mBACRC,cAAeC,aAAaC,QAAQ,UACjCL,EAAQC,YAKdK,KAZI,uCAYC,WAAMzB,GAAN,SAAA0B,EAAA,0DACW,IAAX1B,EAAI2B,GADJ,yCAEK3B,EAAIW,QAFT,gCAIGZ,EAAYC,EA9Bb,2BA0BF,2CAZD,uDAmBJyB,MAAK,SAAAzB,GACJ,OAAOA,SAMjB,IAAM4B,EAAO,SAACzB,EAAK0B,EAAMT,GAYvB,IAAMU,EAAIjB,MAAMV,EAAK,CACnB4B,OAAQ,OACRX,UACAY,KAAMC,KAAKC,UAAUL,KAEvB,OAAOM,QAAQC,KAAK,CAvDb,IAAID,SAAQ,SAACE,EAASC,GAC3B5B,YAAW,WACT4B,EAAO,IAAIC,MAAM,sBALD,QA0DmBT,KC7DzC,mC,0iCCOA,IAAMU,EAAUC,IAAOC,QAAV,KAQPC,EAAWF,IAAOG,IAAV,KAURC,EAAQJ,IAAOK,GAAV,KAILC,EAAWN,YAAO,IAAPA,CAAH,KAGRO,EAAcP,YAAO,IAAPA,CAAH,KAMF,SAASQ,EAAMC,GAAQ,IAAD,EACXC,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,OAEbF,mBAAS,IAFI,mBAE5BG,EAF4B,KAEvBC,EAFuB,KAS7BC,EAAK,uCAAG,8BAAA9B,EAAA,sEAEJ+B,EAAU,CACdL,OACAM,SAAUJ,GAJF,SAMS1B,YAAK,QAAS6B,GANvB,QAMNE,EANM,QAOCC,QACTC,YAAgB,QAASF,EAAOC,OAChCV,EAAMY,QAAQC,KAAK,MAEjBJ,EAAOK,KACTxD,IAAQC,MAAMkD,EAAOK,KAZb,yGAAH,qDAgBX,OACE,kBAACxB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,cACA,uBACEoB,SA3BW,SAAAC,GACjBb,EAAQa,EAAEC,OAAOC,QA2BXC,YAAY,QACZD,MAAOhB,EACPkB,OAAQ,uBAAGC,UAAU,2BAEvB,kBAACxB,EAAD,CACEkB,SA9BU,SAAAC,GAChBX,EAAOW,EAAEC,OAAOC,QA8BVC,YAAY,SACZD,MAAOd,EACPgB,OAAQ,uBAAGC,UAAU,yBAEvB,kBAACvB,EAAD,CAAawB,QAAShB,EAAOiB,KAAK,WAAlC,oB,oDC9ER,IAAQC,OAAO,CACbC,IAAK,GACLC,SAAU,EACVC,SAAU,IAEG","file":"static/js/9.31c3e359.chunk.js","sourcesContent":["import message from '@/utils/message';\r\nconst handleError = (res, baseURL) => {\r\n  switch (res.status) {\r\n    case 403:\r\n      let route = res.url.replace(baseURL, '');\r\n      if (route === 'check') {\r\n        window.location.href = '/login';\r\n      } else {\r\n        message.error('权限过期，两秒后跳转登录页', 2);\r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 2000);\r\n      }\r\n      break;\r\n    case 404:\r\n      message.error('请求路径找不着');\r\n      break;\r\n    default:\r\n      message.error('系统繁忙');\r\n  }\r\n  return res.json();\r\n};\r\nexport default handleError;\r\n","import 'whatwg-fetch';\r\nimport handleError from './handleError';\r\n// 超时设置\r\nconst RESPONSE_TIME = 1000;\r\nconst baseURL = 'http://localhost:7000/';\r\nconst timeoutPromise = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      reject(new Error('request timeout'));\r\n    }, RESPONSE_TIME);\r\n  });\r\n};\r\nconst originFetch = fetch;\r\nObject.defineProperty(window, 'fetch', {\r\n  configurable: true, // 总开关，一旦为 false，就不能再设置他的（value，writable，configurable）\r\n  enumerable: true, // 是否能在 for...in 循环中遍历出来或在 Object.keys 中列举出来。\r\n  get() {\r\n    return (url, options) => {\r\n      return originFetch(`${baseURL}${url}`, {\r\n        ...options,\r\n        ...{\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            Accept: 'application/json',\r\n            authorization: localStorage.getItem('token'),\r\n            ...options.headers\r\n            // 这里统一加token 实现请求拦截\r\n          }\r\n        }\r\n      })\r\n        .then(async res => {\r\n          if (res.ok === true) {\r\n            return res.json();\r\n          }\r\n          return handleError(res, baseURL);\r\n          return res.json();\r\n        })\r\n        .then(res => {\r\n          return res;\r\n        });\r\n    };\r\n  }\r\n});\r\n// post 请求\r\nconst post = (url, data, headers) => {\r\n  // const p = new Promise((resolve, reject) => {\r\n  //   fetch(url, {\r\n  //     method: 'POST',\r\n  //     headers,\r\n  //     body: JSON.stringify(data)\r\n  //   })\r\n  //     .then(res => {\r\n  //       resolve(res);\r\n  //     })\r\n  //     .catch(err => reject(err));\r\n  // });\r\n  const p = fetch(url, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify(data)\r\n  });\r\n  return Promise.race([timeoutPromise(), p]);\r\n};\r\nexport default { post };\r\nexport { post };\r\n","import fetch, { post } from './config';\r\nexport default fetch;\r\nexport { post };\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Input, Button } from 'antd';\r\nimport message from '@/utils/message';\r\nimport { setLocalStorage } from '@/utils/storage';\r\nimport { post } from '@/api';\r\n\r\nconst Section = styled.section`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f3f3f4;\r\n`;\r\nconst LoginBox = styled.div`\r\n  width: 8.412rem;\r\n  height: auto;\r\n  padding: 0.72rem 1.56rem;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  box-shadow: 0 0.1rem 0.2rem rgba(0, 0, 0, 0.12);\r\n  background-color: #fff;\r\n  text-align: center;\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 0.6rem;\r\n  font-weight: bold;\r\n`;\r\nconst PwdInput = styled(Input)`\r\n  margin: 0.4rem auto;\r\n`;\r\nconst LoginButton = styled(Button)`\r\n  width: 2.4rem;\r\n  height: 0.68rem;\r\n  border: none;\r\n  border-radius: 0.08rem;\r\n`;\r\nexport default function Login(props) {\r\n  const [name, setname] = useState('');\r\n  const [pwd, setPwd] = useState('');\r\n  const changeName = e => {\r\n    setname(e.target.value);\r\n  };\r\n  const changePwd = e => {\r\n    setPwd(e.target.value);\r\n  };\r\n  const login = async () => {\r\n    try {\r\n      const account = {\r\n        name,\r\n        password: pwd\r\n      };\r\n      let result = await post('login', account);\r\n      if (result.token) {\r\n        setLocalStorage('token', result.token);\r\n        props.history.push('/');\r\n      }\r\n      if (result.msg) {\r\n        message.error(result.msg);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <Section>\r\n      <LoginBox>\r\n        <Title>ADMIN</Title>\r\n        <Input\r\n          onChange={changeName}\r\n          placeholder=\"admin\"\r\n          value={name}\r\n          prefix={<i className=\"iconfont icon-denglu\"></i>}\r\n        />\r\n        <PwdInput\r\n          onChange={changePwd}\r\n          placeholder=\"123456\"\r\n          value={pwd}\r\n          prefix={<i className=\"iconfont icon-mima\"></i>}\r\n        />\r\n        <LoginButton onClick={login} type=\"primary\">\r\n          登录\r\n        </LoginButton>\r\n      </LoginBox>\r\n    </Section>\r\n  );\r\n}\r\n","import { message } from 'antd';\r\nmessage.config({\r\n  top: 10,\r\n  duration: 2,\r\n  maxCount: 3\r\n});\r\nexport default message;\r\n"],"sourceRoot":""}